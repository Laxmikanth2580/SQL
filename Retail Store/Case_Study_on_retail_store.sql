use retail_store;

-- find product_id with there maximum price
select product_id, max(price) as max_price from orderdetails
group by product_id;

-- Total slaes
select sum(quantity * price) as 'Total sales' from orderdetails;

-- list the total sales amount generated by each product
select p.product_name,
sum(od.quantity*od.price) as total_slaes
from orderdetails as od
join
products as p
on od.product_id = p.product_id
group by
product_name
order by total_slaes desc;

-- show product names and their prices
select product_name, price from products
order by price desc;

-- find all orders placed in June 2024
select * from orders
where month(order_date) = 6 and year(order_date) = 2024;

-- count how many customers have in retail_store databse
select count(*) as total_customers from customers;

-- list the products with price >(greater than) 100
select product_name, price from products
where price >= 100
order by price desc;

-- list orders sorted by highest values
select * from orders
order by total_amount desc;

-- find the products with 'Phone' in the name
select * from products
where product_name like '%Phone%';

-- show tha e top 3 expensive products
select * from products
order by price desc
limit 3;

-- count total quantity sold for each product
select product_id, count(quantity) as total_sold
from orderdetails
group by product_id;

select order_id, product_id, quantity, price,
count(quantity) over (partition by product_id) as total_sold
from orderdetails;

-- count total quantity sold for each product_name
select p.product_name, count(od.quantity) as total_sold
from orderdetails as od
join products as p
on od.product_id = p.product_id
group by product_name
order by total_sold desc;

-- list the customer who have't placed any order
select * from customers as c
where not exists
(select * from orders as o
where o.customer_id = c.customer_id);

-- find the most popular product category based on the number of oreders
select * from orderdetails;

select p.category,
count(distinct o.order_id) as no_of_orders
from orderdetails as od
join products as p
on od.product_id = p.product_id
join orders as o
on od.order_id = o.order_id
group by p.category
order by no_of_orders desc
limit 2;


select p.product_name, p.category,
count(o.order_id) over (partition by p.category) as no_of_orders
from orderdetails as od
join products as p
on od.product_id = p.product_id
join orders as o
on od.order_id = o.order_id
order by no_of_orders desc
limit 2;

-- identify the customers who have placed more than 3 orders
select c.customer_id,
concat(first_name, ' ', last_name) as customer_name,
count(o.order_id) as order_count
from customers as c
join orders as o
on c.customer_id = o.customer_id
group by c.customer_id
having count(o.order_id) > 3;

with customer_order as (
select c.customer_id,
concat(first_name, ' ', last_name) as customer_name,
count(o.order_id) as order_count
from customers as c
join orders as o
on c.customer_id = o.customer_id
group by c.customer_id)

select * from customer_order
where order_count > 3;

-- find all orders where the total amount exceeding the average order values
select * from orders
where total_amount > (select avg(total_amount) from orders)
order by total_amount;
